[
    {
        "version": 0.4
    },
    {
        "type": "field",
        "x": 579,
        "y": 506,
        "size": [
            286,
            50
        ],
        "code": [
            "import pyglet"
        ],
        "connects": [],
        "id": 28
    },
    {
        "type": "field",
        "x": 467,
        "y": 416,
        "size": [
            640,
            30
        ],
        "code": [
            "pyglet.window.Window(300,300,config=pyglet.gl.Config(double_buffer=False))"
        ],
        "connects": [],
        "id": 29
    },
    {
        "type": "node",
        "x": 491,
        "y": 83,
        "size": [
            467,
            338
        ],
        "color": [
            99,
            114,
            116
        ],
        "code": [
            "import pyglet",
            "",
            "def draw(window=None, x=0, y=0):",
            "  window.switch_to()",
            "  window.clear()",
            "  x, y = int(x), int(y)",
            "  pyglet.graphics.draw_indexed(4, ",
            "          pyglet.gl.GL_TRIANGLES,\r",
            "    [0, 1, 2, 0, 2, 3],\r",
            "    ('v2i', (100, 100,\r",
            "             150, 100,\r",
            "             150 + x, 150 + y,\r",
            "             100, 150))\r",
            "    )",
            "",
            "call = draw"
        ],
        "connects": [
            {
                "output": {
                    "node": 31,
                    "put": {
                        "name": "result 0"
                    }
                },
                "input": {
                    "put": {
                        "name": "x"
                    }
                }
            },
            {
                "output": {
                    "node": 31,
                    "put": {
                        "name": "result 1"
                    }
                },
                "input": {
                    "put": {
                        "name": "y"
                    }
                }
            },
            {
                "output": {
                    "node": 29,
                    "put": {
                        "name": "output"
                    }
                },
                "input": {
                    "put": {
                        "name": "window"
                    }
                }
            }
        ],
        "id": 30
    },
    {
        "type": "node",
        "x": 615,
        "y": 193,
        "size": [
            387,
            231
        ],
        "color": [
            80,
            123,
            85
        ],
        "code": [
            "from typing import *",
            "from math import sin, cos",
            "",
            "def sincos(a=0, m=1) -> Tuple[Any, Any]:",
            "  si = sin(a)*m",
            "  ci = cos(a)*m",
            "  return si, ci",
            "",
            "call = sincos"
        ],
        "connects": [
            {
                "output": {
                    "node": 32,
                    "put": {
                        "name": "output"
                    }
                },
                "input": {
                    "put": {
                        "name": "m"
                    }
                }
            },
            {
                "output": {
                    "node": 35,
                    "put": {
                        "name": "result"
                    }
                },
                "input": {
                    "put": {
                        "name": "a"
                    }
                }
            }
        ],
        "id": 31
    },
    {
        "type": "field",
        "x": 680,
        "y": 289,
        "size": [
            70,
            30
        ],
        "code": [
            "28"
        ],
        "connects": [],
        "id": 32
    },
    {
        "type": "node",
        "x": 521,
        "y": 354,
        "size": [
            300,
            150
        ],
        "color": [
            124,
            125,
            123
        ],
        "code": [
            "S['t'] = 0",
            "",
            "def time():",
            "  S['t'] += G['dt']",
            "  return S['t']",
            "",
            "call = time"
        ],
        "connects": [],
        "id": 33
    },
    {
        "type": "field",
        "x": 142,
        "y": 506,
        "size": [
            212,
            102
        ],
        "code": [
            "'''",
            "There is example of some graphics stuff",
            "",
            "'''"
        ],
        "connects": [],
        "id": 34
    },
    {
        "type": "node",
        "x": 565,
        "y": 276,
        "size": [
            300,
            150
        ],
        "color": [
            84,
            85,
            94
        ],
        "code": [
            "def mul(a=0, b=1):",
            "    result = a * b",
            "    return result",
            "",
            "call = mul"
        ],
        "connects": [
            {
                "output": {
                    "node": 33,
                    "put": {
                        "name": "result"
                    }
                },
                "input": {
                    "put": {
                        "name": "a"
                    }
                }
            },
            {
                "output": {
                    "node": 36,
                    "put": {
                        "name": "output"
                    }
                },
                "input": {
                    "put": {
                        "name": "b"
                    }
                }
            }
        ],
        "id": 35
    },
    {
        "type": "field",
        "x": 608,
        "y": 355,
        "size": [
            85,
            30
        ],
        "code": [
            "3.00"
        ],
        "connects": [],
        "id": 36
    }
]